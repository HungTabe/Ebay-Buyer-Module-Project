@page "{id:int}"
@model CloneEbay.Pages.OrderDetailModel
@{
    ViewData["Title"] = "Order Details #" + Model.OrderDetail?.Id;
    var canReviewOrReturn = Model.OrderDetail.Status?.ToLower() == "delivered"
        || (Model.OrderDetail.Status?.ToLower() == "paid"
            && Model.OrderDetail.ShippingInfo?.Status == "Delivered");
}

<div class="container mt-4">
    @if (Model.OrderDetail == null)
    {
        <div class="alert alert-danger">
            <i class="fas fa-exclamation-triangle"></i> Order not found or you do not have permission to view this order.
        </div>
        <a href="/OrderHistory" class="btn btn-primary">Back to order history</a>
    }
    else
    {
        <div class="row">
            <div class="col-md-8">
                <!-- Order Information -->
                <div class="card mb-4">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Order #@Model.OrderDetail.Id</h5>
                        <span class="badge @GetStatusBadgeClass(Model.OrderDetail.Status) fs-6">@GetStatusDisplayName(Model.OrderDetail.Status)</span>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <p><strong>Order Date:</strong> @Model.OrderDetail.OrderDate.ToString("dd/MM/yyyy HH:mm")</p>
                                <p><strong>Total:</strong> $@Model.OrderDetail.TotalPrice.ToString("F2")</p>
                                @if (!string.IsNullOrEmpty(Model.CouponCode) && Model.CouponDiscountPercent > 0)
                                {
                                    <p><strong>Coupon:</strong> <span class="text-success">@Model.CouponCode (@Model.CouponDiscountPercent% off)</span></p>
                                }
                            </div>
                            <div class="col-md-6">
                                <p><strong>Items:</strong> @Model.OrderDetail.Items.Count</p>
                                <p><strong>Status:</strong> @GetStatusDisplayName(Model.OrderDetail.Status)</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Order Items -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Ordered Products</h5>
                    </div>
                    <div class="card-body">
                        @foreach (var item in Model.OrderDetail.Items)
                        {
                            <div class="row mb-3 align-items-center">
                                <div class="col-md-2">
                                    @if (!string.IsNullOrEmpty(item.ProductImage))
                                    {
                                        <img src="@item.ProductImage" alt="@item.ProductName" class="img-fluid rounded" style="max-height: 80px; object-fit: cover;" />
                                    }
                                    else
                                    {
                                        <div class="bg-light rounded d-flex align-items-center justify-content-center" style="height: 80px;">
                                            <i class="fas fa-image text-muted"></i>
                                        </div>
                                    }
                                </div>
                                <div class="col-md-6">
                                    <h6 class="mb-1">@item.ProductName</h6>
                                    <small class="text-muted">Quantity: @item.Quantity</small>
                                </div>
                                <div class="col-md-2 text-end">
                                    <small class="text-muted">Unit Price</small><br />
                                    $@item.UnitPrice.ToString("F2")
                                </div>
                                <div class="col-md-2 text-end">
                                    <strong>$@item.TotalPrice.ToString("F2")</strong>
                                </div>
                            </div>
                            @if (item != Model.OrderDetail.Items.Last())
                            {
                                <hr />
                            }
                        }
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <!-- Shipping Address -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Shipping Address</h5>
                    </div>
                    <div class="card-body">
                        <p class="mb-1"><strong>@Model.OrderDetail.Address.FullName</strong></p>
                        <p class="mb-1">@Model.OrderDetail.Address.Phone</p>
                        <p class="mb-1">@Model.OrderDetail.Address.Street</p>
                        <p class="mb-1">@Model.OrderDetail.Address.City, @Model.OrderDetail.Address.State</p>
                        <p class="mb-0">@Model.OrderDetail.Address.Country, @Model.OrderDetail.Address.PostalCode</p>
                    </div>
                </div>

                <!-- Payment Information -->
                @if (Model.OrderDetail.Payment != null)
                {
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="mb-0">Payment Information</h5>
                        </div>
                        <div class="card-body">
                            <p class="mb-1"><strong>Method:</strong> @Model.OrderDetail.Payment.PaymentMethod</p>
                            <p class="mb-1"><strong>Amount:</strong> $@Model.OrderDetail.Payment.Amount.ToString("F2")</p>
                            <p class="mb-1"><strong>Status:</strong> @Model.OrderDetail.Payment.Status</p>
                            <p class="mb-0"><strong>Payment Date:</strong> @Model.OrderDetail.Payment.PaymentDate.ToString("dd/MM/yyyy HH:mm")</p>
                        </div>
                    </div>
                }

                <!-- Shipping Information -->
                @if (Model.OrderDetail.ShippingInfo != null)
                {
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="mb-0">Shipping Information</h5>
                        </div>
                        <div class="card-body">
                            <p class="mb-1"><strong>Carrier:</strong> @Model.OrderDetail.ShippingInfo.Carrier</p>
                            <p class="mb-1"><strong>Tracking Number:</strong> @Model.OrderDetail.ShippingInfo.TrackingNumber</p>
                            <p class="mb-1"><strong>Status:</strong> @Model.OrderDetail.ShippingInfo.Status</p>
                            @if (Model.OrderDetail.ShippingInfo.ShippedDate.HasValue)
                            {
                                <p class="mb-1"><strong>Shipped Date:</strong> @Model.OrderDetail.ShippingInfo.ShippedDate.Value.ToString("dd/MM/yyyy")</p>
                            }
                            @if (Model.OrderDetail.ShippingInfo.EstimatedDelivery.HasValue)
                            {
                                <p class="mb-0"><strong>Estimated Delivery:</strong> @Model.OrderDetail.ShippingInfo.EstimatedDelivery.Value.ToString("dd/MM/yyyy")</p>
                            }
                        </div>
                    </div>
                }

                <!-- Action Buttons -->
                <div class="d-grid gap-2">
                    <a href="/OrderHistory" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left"></i> Back to history
                    </a>
                    @if (canReviewOrReturn)
                    {
                        var firstProductId = Model.OrderDetail.Items.FirstOrDefault()?.ProductId;
                        if (firstProductId != null)
                        {
                            <a href="/ProductReviews/@firstProductId" class="btn btn-primary">
                                <i class="fas fa-star"></i> Review product
                            </a>
                        }
                        @if (Model.CanReturnOrder)
                        {
                            <a href="/CreateReturnRequest?orderId=@Model.OrderDetail.Id" class="btn btn-warning">
                                <i class="fas fa-undo"></i> Request return
                            </a>
                        }
                        else if (Model.HasReturnRequest)
                        {
                            <button class="btn btn-secondary" disabled>
                                <i class="fas fa-clock"></i> Return requested
                            </button>
                        }
                    }
                </div>
            </div>
        </div>
    }
</div>

@functions {
    private string GetStatusBadgeClass(string status)
    {
        return status?.ToLower() switch
        {
            "pending" => "bg-warning",
            "processing" => "bg-info",
            "shipped" => "bg-primary",
            "delivered" => "bg-success",
            "cancelled" => "bg-danger",
            "returned" => "bg-secondary",
            _ => "bg-secondary"
        };
    }

    private string GetStatusDisplayName(string status)
    {
        return status?.ToLower() switch
        {
            "pending" => "Pending",
            "processing" => "Processing",
            "shipped" => "Shipped",
            "delivered" => "Delivered",
            "cancelled" => "Cancelled",
            "returned" => "Returned",
            _ => status ?? "Unknown"
        };
    }
} 